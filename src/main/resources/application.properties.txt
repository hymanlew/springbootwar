
# 只适用于内置 server
#server.port=9001

#==================================================================

spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.schema=classpath:sql/table.sql,classpath:sql/data.sql
spring.datasource.data=classpath:sql/table.sql,classpath:sql/data.sql

# 如果是使用 boot 2.0 以上的版本，就必须加上下面一句，否则不会执行 sql 文件。
spring.datasource.initialization-mode=always

#==================================================================

# 以下是 hibernate 配置属性，其作用是：自动创建、更新、验证数据库表结构。其参数说明如下：

# create：每次加载 hibernate 时都会删除上一次的生成的表，然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样
# 执行，这就是导致数据库表数据丢失的一个重要原因。

# create-drop：每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭,表就自动删除。

# update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate
# 时根据 model 类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被
# 马上建立起来的，是要等应用第一次运行起来后才会。

# validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
spring.jpa.properties..hibernate.hbm2ddl.auto=update

# dialect 主要是指定生成表名的存储引擎为InneoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# show-sql 是否打印出自动生产的SQL，方便调试的时候查看
spring.jpa.show-sql= true

#==================================================================

# Redis 数据库索引，默认为 0。通常使用 0即可，Redis在配置的时候可以设置数据库数量，默认为16，可以理解为数据库的schema
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
# 这里设置的密码没起作用，可能是因为我使用的方法都是用的默认配置
#spring.redis.password = 123456

# 整合redis 集群（只是样板 IP）
spring.redis.cluster.nodes = 12.2.3.14:7001,12.2.3.14:7002,12.2.3.14:7003,12.2.3.14:7004

# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.min-idle=8

# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
spring.redis.jedis.pool.max-idle=8

# 连接超时时间（毫秒）
spring.redis.jedis.timeout=0

#==================================================================

# path为本机的log地址，logging.level后面可以根据包路径配置不同资源的log级别
logging.path=F:/log
logging.level.hyman=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

#==================================================================